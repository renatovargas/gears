[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The Agrifood Economics and Policy Division (ESA) conducts economic research and policy analysis to support the transformation to more efficient, inclusive, resilient and sustainable agrifood systems for better production, better nutrition, a better environment, and a better life, leaving no one behind. ESA provides evidence-based support to national, regional and global policy processes and initiatives related to monitoring and analysing food and agricultural policies, agribusiness and value chain development, rural transformation and poverty, food security and nutrition information and analysis, resilience, bioeconomy, and climate-smart agriculture. The division also leads the production of two FAO flagship publications: The State of Food and Agriculture (SOFA) and The State of Food Security and Nutrition in the World (SOFI).\nWithin ESA, the Monitoring and Analysing Food and Agricultural Policies (MAFAP) programme seeks to establish country owned and sustainable systems to monitor, analyse, and reform food and agricultural policies to enable more effective, efficient and inclusive policy frameworks in 8 developing and emerging economies. MAFAP works with government institutions, research organizations and other partners to create sustainable policy monitoring systems and carry out a consistent set of policy and public expenditure analyses across a wide range of agricultural value chains. MAFAP analyses are used to inform targeted food and agricultural policy reforms that will result in a more conducive environment for agricultural investment and productivity growth, especially for smallholder farmers. As such, MAFAP supports most of FAO strategic objectives, and in particular those of enabling inclusive and efficient agricultural and food systems and helping eliminate hunger, food insecurity and malnutrition.\nA policy optimization modelling tool (that combines a recursive-dynamic computable general equilibrium model and multi-criteria decision-making techniques) is being used by the MAFAP programme team to develop and analyse scenarios where the public budget for the food and agriculture sector can be optimally re-allocated across different support measures (input subsidies, extension services, investments in different types of rural infrastructures, R&D, and so forth) and subsectors/commodities, aiming at improving on one or a combination of inclusive agricultural transformation (IAT) objectives such as: maximizing agrifood GDP, maximizing the number of off- farm jobs created in rural areas (vis-à-vis the number of on-farm jobs), and minimizing rural poverty. Most recently, the objective of minimizing the cost of the least-cost healthy diet was added to the tool. Next extensions to the tool comprise adding other objectives, notably the minimization of greenhouse gas (GHGs) emissions that are generated as a result of public expenditures in food and agriculture."
  },
  {
    "objectID": "about.html#general-information",
    "href": "about.html#general-information",
    "title": "About",
    "section": "",
    "text": "The Agrifood Economics and Policy Division (ESA) conducts economic research and policy analysis to support the transformation to more efficient, inclusive, resilient and sustainable agrifood systems for better production, better nutrition, a better environment, and a better life, leaving no one behind. ESA provides evidence-based support to national, regional and global policy processes and initiatives related to monitoring and analysing food and agricultural policies, agribusiness and value chain development, rural transformation and poverty, food security and nutrition information and analysis, resilience, bioeconomy, and climate-smart agriculture. The division also leads the production of two FAO flagship publications: The State of Food and Agriculture (SOFA) and The State of Food Security and Nutrition in the World (SOFI).\nWithin ESA, the Monitoring and Analysing Food and Agricultural Policies (MAFAP) programme seeks to establish country owned and sustainable systems to monitor, analyse, and reform food and agricultural policies to enable more effective, efficient and inclusive policy frameworks in 8 developing and emerging economies. MAFAP works with government institutions, research organizations and other partners to create sustainable policy monitoring systems and carry out a consistent set of policy and public expenditure analyses across a wide range of agricultural value chains. MAFAP analyses are used to inform targeted food and agricultural policy reforms that will result in a more conducive environment for agricultural investment and productivity growth, especially for smallholder farmers. As such, MAFAP supports most of FAO strategic objectives, and in particular those of enabling inclusive and efficient agricultural and food systems and helping eliminate hunger, food insecurity and malnutrition.\nA policy optimization modelling tool (that combines a recursive-dynamic computable general equilibrium model and multi-criteria decision-making techniques) is being used by the MAFAP programme team to develop and analyse scenarios where the public budget for the food and agriculture sector can be optimally re-allocated across different support measures (input subsidies, extension services, investments in different types of rural infrastructures, R&D, and so forth) and subsectors/commodities, aiming at improving on one or a combination of inclusive agricultural transformation (IAT) objectives such as: maximizing agrifood GDP, maximizing the number of off- farm jobs created in rural areas (vis-à-vis the number of on-farm jobs), and minimizing rural poverty. Most recently, the objective of minimizing the cost of the least-cost healthy diet was added to the tool. Next extensions to the tool comprise adding other objectives, notably the minimization of greenhouse gas (GHGs) emissions that are generated as a result of public expenditures in food and agriculture."
  },
  {
    "objectID": "about.html#disclaimer",
    "href": "about.html#disclaimer",
    "title": "About",
    "section": "Disclaimer",
    "text": "Disclaimer\nThe designations employed and the presentation of information on this website do not imply the expression of any opinion whatsoever on the part of FAO concerning the legal or development status of any country, territory, city or area or of its authorities, or concerning the delimitation of its frontiers or boundaries. The mention of specific companies or products of manufacturers, whether or not these have been patented, does not imply that these have been endorsed or recommended by FAO in preference to others of a similar nature that are not mentioned.\nInformation on this site is provided on an “as is” and “as available” basis. FAO makes every effort to ensure, but does not guarantee, the accuracy, completeness or authenticity of the information on this website. FAO reserves the right to alter, limit or discontinue any part of this service at its discretion. Under no circumstances shall FAO be liable for any loss, damage, liability or expense suffered that is claimed to result from the use of information posted on this site, including without limitation, any fault, error, omission, interruption or delay.\nHyperlinks to non-FAO websites do not imply any official endorsement of or responsibility on the part of FAO for the opinions, ideas, data or products presented at these locations, or guarantee the validity of the information provided. The sole purpose of links to non-FAO sites is to indicate further information available on related topics. The information is provided on the basis that users accessing the platform assume responsibility for assessing its relevance, accuracy and suitability for application.\nNo part of these Terms and Conditions shall constitute or be interpreted as a waiver of the privileges and immunities of FAO."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PolOpT Emissions Database (EMDB)",
    "section": "",
    "text": "The Policy Optimization Tool’s (PolOpT) Emissions Database (EMDB) is an effort of the Monitoring and Analysing Food and Agricultural Policies (MAFAP) programme of the Agrifood Economics and Policy Division (ESA) of the Food and Agriculture Organization of the United Nations (FAO), which aims to provide a seamless integration of data on anthropogenic emissions of greenhouse gases and air pollution with National Accounts data at different levels of aggregation by economic activity for use with environmentally extended structural analysis frameworks like Computable General Equilibrium and Input-Output models. Its main output is the GEARS Database of anthropogenic emissions of greenhouse gases and air pollution by economic activity.\nIn addition to the database, EMDB also provides scripting facilities for the integration of different data sources, at different tiers of data availability by country and thorough documentation to abide by the principles of replicability, openness, and transparency.\nDisclaimer: While EMDB has been made possible with the support from the Food and Agriculture Organization of the United Nations (FAO), this is a work in progress, which has not undergone FAO’s rigorous review process and the methodological choices made here do not represent an institutional position of FAO, the Agrifood Economics and Policy Division (ESA), or any other of its instances. For more disclaimers, see the about page."
  },
  {
    "objectID": "documentation/methods/emdb_processing.html",
    "href": "documentation/methods/emdb_processing.html",
    "title": "PolOpT Emissions Database (EMDB)",
    "section": "",
    "text": "For replicability purposes we describe the data sourcing, cleaning, and combination steps to create a harmonized emissions dataset with inputs from FAOSTAT (FAO 2024), EDGAR (Crippa et al. 2023), and the UN Energy Statistics Database (UNSD 2023). The objective is to have a single data source, which can be readily linked with any social accounting matrix or input-output table.\n\n\n\n# Clean workspace\nrm(list = ls())\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(gt)\n\n\n\n\nNote that some large CSV datasets have been converted to much smaller R rds files in a previous step, so that they can be included with this self contained repository. The code for this transformation is also included in the folder emdb/scripts.\n\n\n\n# EDGAR\nedgar &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_AR5_GHG_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2 &lt;- read_xlsx(\n  \"emdb/data/edgar/IEA_EDGAR_CO2_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2bio  &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_CO2bio_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_ch4 &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_CH4_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_n2o &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_N2O_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_f_gases &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_AR5g_F-gases_1990_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\n\n\n\n\n# FAOSTAT\nfaostat_total_emissions &lt;- \n  readRDS(\n    \"emdb/data/faostat/total_emissions.rds\")\nfaostat_crops &lt;- \n  readRDS(\n    \"emdb/data/faostat/crops.rds\")\nfaostat_drained_organic_soils &lt;- \n  readRDS(\n    \"emdb/data/faostat/drained_organic_soils.rds\")\nfaostat_flags &lt;- \n  readRDS(\n    \"emdb/data/faostat/flags.rds\")\nfaostat_livestock &lt;- \n  readRDS(\"emdb/data/faostat/livestock.rds\")\nfaostat_production &lt;- \n  readRDS(\n    \"emdb/data/faostat/production.rds\")\nfaostat_area_codes &lt;- \n  readRDS(\n    \"emdb/data/faostat/area_codes.rds\")\n\n\n\n\n\nun_energy &lt;- readRDS(\n  \"emdb/data/un_energy/un_energy.rds\"\n)\n\nDuring the various data cleaning steps, several equivalence tables allow us to better describe each observation. They have been created in an iterative process in which raw data is extracted, and either cleaned or linked to other data in the worksheets below.\n\n\n\n\nfao_countries &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT COUNTRIES\")\nfao_ipcc &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT IPCC\")\nisic &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"GWP ISIC\")\nfull_isic4 &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"ISIC Rev 4\")\nun_energy_ipcc_coef &lt;- read_xlsx(\n  \"emdb/data/coefficients/un_energy_ipcc_coefficients.xlsx\",\n  sheet = \"un_energy_coefficients\"\n)\n\nThis commented out portion was used interactively to evaluate UN energy statistics’ units of measurements, because we needed to create a conversion table from volume to TJ in a separate spreadsheet. However, some commodities are already expressed in TJ and we needed to know which, so that we could give them a conversion factor of 1.\n\n# Test to see units of measurement for each commodity\n# Fortunately no duplicates.\n# Use https://unstats.un.org/unsd/publication/SeriesF/SeriesF_44E.pdf\n# for conversions to TJ.\n# test &lt;- un_energy |&gt;\n#   group_by(Commodity, Unit) |&gt;\n#   summarize(Total = sum(Quantity, na.rm = T)) |&gt;\n#   ungroup()\n# # write.table(test, \"clipboard\", sep = \"\\t\", row.names = F) # Windows\n# write.table(\n#   test,\n#   pipe(\"xclip -selection clipboard\"),  # Unix\n#   sep = \"\\t\",\n#   row.names = F)",
    "crumbs": [
      "Methods",
      "Processing code"
    ]
  },
  {
    "objectID": "documentation/methods/emdb_processing.html#preliminaries",
    "href": "documentation/methods/emdb_processing.html#preliminaries",
    "title": "PolOpT Emissions Database (EMDB)",
    "section": "",
    "text": "# Clean workspace\nrm(list = ls())\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(gt)",
    "crumbs": [
      "Methods",
      "Processing code"
    ]
  },
  {
    "objectID": "documentation/methods/emdb_processing.html#datasets",
    "href": "documentation/methods/emdb_processing.html#datasets",
    "title": "PolOpT Emissions Database (EMDB)",
    "section": "",
    "text": "Note that some large CSV datasets have been converted to much smaller R rds files in a previous step, so that they can be included with this self contained repository. The code for this transformation is also included in the folder emdb/scripts.\n\n\n\n# EDGAR\nedgar &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_AR5_GHG_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2 &lt;- read_xlsx(\n  \"emdb/data/edgar/IEA_EDGAR_CO2_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_co2bio  &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_CO2bio_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_ch4 &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_CH4_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_n2o &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_N2O_1970_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\nedgar_f_gases &lt;- read_xlsx(\n  \"emdb/data/edgar/EDGAR_AR5g_F-gases_1990_2023.xlsx\",\n  skip = 9,\n  sheet = \"IPCC 2006\")\n\n\n\n\n\n# FAOSTAT\nfaostat_total_emissions &lt;- \n  readRDS(\n    \"emdb/data/faostat/total_emissions.rds\")\nfaostat_crops &lt;- \n  readRDS(\n    \"emdb/data/faostat/crops.rds\")\nfaostat_drained_organic_soils &lt;- \n  readRDS(\n    \"emdb/data/faostat/drained_organic_soils.rds\")\nfaostat_flags &lt;- \n  readRDS(\n    \"emdb/data/faostat/flags.rds\")\nfaostat_livestock &lt;- \n  readRDS(\"emdb/data/faostat/livestock.rds\")\nfaostat_production &lt;- \n  readRDS(\n    \"emdb/data/faostat/production.rds\")\nfaostat_area_codes &lt;- \n  readRDS(\n    \"emdb/data/faostat/area_codes.rds\")\n\n\n\n\n\nun_energy &lt;- readRDS(\n  \"emdb/data/un_energy/un_energy.rds\"\n)\n\nDuring the various data cleaning steps, several equivalence tables allow us to better describe each observation. They have been created in an iterative process in which raw data is extracted, and either cleaned or linked to other data in the worksheets below.\n\n\n\n\nfao_countries &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT COUNTRIES\")\nfao_ipcc &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"FAOSTAT IPCC\")\nisic &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"GWP ISIC\")\nfull_isic4 &lt;- read_xlsx(\n  \"emdb/data/classifications/equivalence.xlsx\",\n  sheet = \"ISIC Rev 4\")\nun_energy_ipcc_coef &lt;- read_xlsx(\n  \"emdb/data/coefficients/un_energy_ipcc_coefficients.xlsx\",\n  sheet = \"un_energy_coefficients\"\n)\n\nThis commented out portion was used interactively to evaluate UN energy statistics’ units of measurements, because we needed to create a conversion table from volume to TJ in a separate spreadsheet. However, some commodities are already expressed in TJ and we needed to know which, so that we could give them a conversion factor of 1.\n\n# Test to see units of measurement for each commodity\n# Fortunately no duplicates.\n# Use https://unstats.un.org/unsd/publication/SeriesF/SeriesF_44E.pdf\n# for conversions to TJ.\n# test &lt;- un_energy |&gt;\n#   group_by(Commodity, Unit) |&gt;\n#   summarize(Total = sum(Quantity, na.rm = T)) |&gt;\n#   ungroup()\n# # write.table(test, \"clipboard\", sep = \"\\t\", row.names = F) # Windows\n# write.table(\n#   test,\n#   pipe(\"xclip -selection clipboard\"),  # Unix\n#   sep = \"\\t\",\n#   row.names = F)",
    "crumbs": [
      "Methods",
      "Processing code"
    ]
  },
  {
    "objectID": "documentation/methods/emdb_processing.html#edgar-databases",
    "href": "documentation/methods/emdb_processing.html#edgar-databases",
    "title": "PolOpT Emissions Database (EMDB)",
    "section": "EDGAR databases",
    "text": "EDGAR databases\nThe first thing that we do with EDGAR is see which domains from IPCC it covers.\n\nedgar_ipcc_names &lt;- \n  data.frame(\n    code      = unique(\n      edgar$ipcc_code_2006_for_standard_report),\n    ipcc_name = unique(\n      edgar$ipcc_code_2006_for_standard_report_name)) |&gt; \n  arrange(code)\n\nedgar_ipcc_names |&gt; \n  gt()\n\n\n\n\n\n\n\ncode\nipcc_name\n\n\n\n\n1.A.1.a\nMain Activity Electricity and Heat Production\n\n\n1.A.1.bc\nPetroleum Refining - Manufacture of Solid Fuels and Other Energy Industries\n\n\n1.A.2\nManufacturing Industries and Construction\n\n\n1.A.3.a\nCivil Aviation\n\n\n1.A.3.b_noRES\nRoad Transportation no resuspension\n\n\n1.A.3.c\nRailways\n\n\n1.A.3.d\nWater-borne Navigation\n\n\n1.A.3.e\nOther Transportation\n\n\n1.A.4\nResidential and other sectors\n\n\n1.A.5\nNon-Specified\n\n\n1.B.1\nSolid Fuels\n\n\n1.B.2\nOil and Natural Gas\n\n\n2.A.1\nCement production\n\n\n2.A.2\nLime production\n\n\n2.A.3\nGlass Production\n\n\n2.A.4\nOther Process Uses of Carbonates\n\n\n2.B\nChemical Industry\n\n\n2.C\nMetal Industry\n\n\n2.D\nNon-Energy Products from Fuels and Solvent Use\n\n\n2.E\nElectronics Industry\n\n\n2.F\nProduct Uses as Substitutes for Ozone Depleting Substances\n\n\n2.G\nOther Product Manufacture and Use\n\n\n3.A.1\nEnteric Fermentation\n\n\n3.A.2\nManure Management\n\n\n3.C.1\nEmissions from biomass burning\n\n\n3.C.2\nLiming\n\n\n3.C.3\nUrea application\n\n\n3.C.4\nDirect N2O Emissions from managed soils\n\n\n3.C.5\nIndirect N2O Emissions from managed soils\n\n\n3.C.6\nIndirect N2O Emissions from manure management\n\n\n3.C.7\nRice cultivations\n\n\n4.A\nSolid Waste Disposal\n\n\n4.B\nBiological Treatment of Solid Waste\n\n\n4.C\nIncineration and Open Burning of Waste\n\n\n4.D\nWastewater Treatment and Discharge\n\n\n5.A\nIndirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3\n\n\n5.B\nFossil fuel fires\n\n\n\n\n\n\n\nWe see is that LULUCF is not included. We take note of this as we remove the domains that are covered in more detail in FAOSTAT (section 3). Originally, we estimated our own emissions for the energy part (section 1) from converting Energy Balances to the SEEA energy accounts format. However, this requires a Supply and Use table to distribute uses and applying TIER 1 coefficients. In this first version, we will take it as is from EDGAR. Our concern is that EDGAR takes use outside energy transformer industries from energy balance (i.e. other industrial, residential, transportation) at face value and we believe that this distribution can be improved if National Accounts is used to distribute intermediate and final consumption of energy outside the energy transformation sectors.\nWe could use total CO2 equivalent emissions aggregated from our edgar dataset, but full disaggregation by gas has been requested, so we perform our cleaning of the dataset for all of these and apply Tier 1 Global Warming Potential (GWP AR5) coefficients to individual datasets.\nBut first we use custom function transform_edgar_datasets to extract the relevant IPCC items and normalize the years structure.\n\n# Requires library(tidyverse)\n# Recursive function with direct naming of outputs\ntransform_edgar_datasets &lt;- function(datasets, dataset_names) {\n  if (length(datasets) == 0) {\n    return(invisible(NULL)) # End recursion\n  }\n  if(length(datasets)== 1){\n    print(\"The transformed datasets have the prefix 'transformed_'\")\n  }\n  # Process the first dataset\n  dataset &lt;- datasets[[1]]\n  name &lt;- dataset_names[[1]]\n  \n  # Apply the transformation\n  transformed &lt;- dataset |&gt; \n    filter(grepl(\"^(1|2|3|4|5)\", ipcc_code_2006_for_standard_report)) |&gt; \n    pivot_longer(\n      cols = starts_with(\"Y_\"),\n      names_to = \"Year\",\n      values_to= \"Value\"\n    ) |&gt; \n    mutate(\n      Year = as.numeric(sub(\"^Y_\", \"\", Year))\n    )\n  \n  # Assign the transformed dataset to the global environment\n  assign(paste0(\"transformed_\", name), transformed, envir = .GlobalEnv)\n  \n  # Recursion with the rest of the datasets\n  transform_edgar_datasets(datasets[-1], dataset_names[-1])\n}\n\n\nIndividual datasets\n\ndatasets &lt;- list(\n  edgar_co2,\n  edgar_co2bio,\n  edgar_ch4,\n  edgar_n2o,\n  edgar_f_gases\n)\ndataset_names &lt;- c(\"co2\", \"co2bio\", \"ch4\", \"n2o\", \"edgar_f_gases\")\n\ntransform_edgar_datasets(datasets, dataset_names)\n\n[1] \"The transformed datasets have the prefix 'transformed_'\"\n\nrm(datasets)\n\n\n\nDataset binding and GWP calculation\nWith the datasets transformed, we bind them together and transform to GWP.\n\n# Usage\ngwp_edgar_total2 &lt;- rbind(\n  transformed_co2,\n  transformed_co2bio,\n  transformed_ch4,\n  transformed_n2o,\n  transformed_edgar_f_gases) |&gt; \n  mutate(\n    Value = case_when(\n      Substance == \"CH4\" ~ Value * 28 , # GWP CH4 AR5 100-year horizon\n      Substance == \"N2O\" ~ Value * 265, # GWP N2O AR5 100-year horizon\n      .default = Value\n    ),\n    Substance = case_when(\n      Substance == \"CO2\" ~ \"Emissions (CO2)\",\n      Substance == \"CO2bio\" ~ \"Emissions (CO2bio)\",\n      Substance == \"CH4\" ~ \"Emissions (CO2eq) from CH4 (AR5)\",\n      Substance == \"N2O\" ~ \"Emissions (CO2eq) from N2O (AR5)\",\n      Substance == \"GWP_100_AR5_PFC\" ~\n        \"Emissions (CO2eq) from PFC (AR5)\",\n      Substance == \"GWP_100_AR5_HFC\" ~\n        \"Emissions (CO2eq) from HFC (AR5)\",\n      Substance == \"GWP_100_AR5_HCFC\" ~\n        \"Emissions (CO2eq) from HCFC (AR5)\",\n      Substance == \"GWP_100_AR5_SF6\" ~\n        \"Emissions (CO2eq) from SF6 (AR5)\",\n      Substance == \"GWP_100_AR5_NF3\" ~\n        \"Emissions (CO2eq) from NF3 (AR5)\",\n      .default = Substance\n    ),\n    `Element Code` = case_when(\n      Substance == \"Emissions (CO2)\" ~ 7273,\n      Substance == \"Emissions (CO2bio)\" ~ 7279,\n      Substance == \"Emissions (CO2eq) from CH4 (AR5)\"  ~ 724413,\n      Substance == \"Emissions (CO2eq) from N2O (AR5)\"  ~ 724313,\n      Substance == \"Emissions (CO2eq) from PFC (AR5)\"  ~ 724995,\n      Substance == \"Emissions (CO2eq) from HFC (AR5)\"  ~ 724996,\n      Substance == \"Emissions (CO2eq) from HCFC (AR5)\" ~ 724997,\n      Substance == \"Emissions (CO2eq) from SF6 (AR5)\"  ~ 724998,\n      Substance == \"Emissions (CO2eq) from NF3 (AR5)\"  ~ 724999,\n      .default = NA\n    ),\n    Unit = \"kt\",\n    `Driver Code` =\n      ipcc_code_2006_for_standard_report,\n    Driver = \n      ipcc_code_2006_for_standard_report_name,\n    `Sector Code` = ipcc_code_2006_for_standard_report,\n    Sector = ipcc_code_2006_for_standard_report_name,\n    Sector = if_else(\n      `Sector Code`== \"1.A.5\",\n      \"Non-Specified from IPCC Energy Volume\",\n      Sector),\n    # `Sector Code` = \"\",\n    # Sector = \"\"\n  ) |&gt; \n  mutate(across(where(is.character), as.factor)) |&gt; \n  rename(\n    Element = Substance,\n    ISO3 = Country_code_A3,\n    `IPCC Code` = ipcc_code_2006_for_standard_report,\n    IPCC = ipcc_code_2006_for_standard_report_name) |&gt; \n  left_join(\n    fao_countries,\n    join_by(ISO3)\n  ) |&gt; \n  select(\n    `Area Code`,\n    Area,\n    ISO3,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    `IPCC Code`, \n    IPCC,\n    Year,\n    Unit,\n    Value )\n\n# Remove all EDGAR inputs\nrm(list = \n  ls()[startsWith(ls(), \"transformed_\") |\n         startsWith(ls(), \"edgar\")])\n\n# And save to RDS\nsaveRDS(gwp_edgar_total2, \"emdb/data/outputs/gwp_edgar_total.rds\")\n\ngwp_edgar_total &lt;- gwp_edgar_total2 |&gt;\n  filter(\n    ! startsWith(as.character(`IPCC Code`),\"3\")\n  )",
    "crumbs": [
      "Methods",
      "Processing code"
    ]
  },
  {
    "objectID": "documentation/methods/emdb_processing.html#faostat-databases",
    "href": "documentation/methods/emdb_processing.html#faostat-databases",
    "title": "PolOpT Emissions Database (EMDB)",
    "section": "FAOSTAT databases",
    "text": "FAOSTAT databases\n\nTotal emissions\nNow we turn our attention to FAOSTAT. First we clean the totals dataset faostat_total_emissions. This is because FAOSTAT includes subtotals and totals within the dataset, and we need to filter out data elements to avoid double counting.\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"elements\", as.matrix(\n    unique(faostat_total_emissions$`Element Code`)\n  ), as.matrix(\n    unique(faostat_total_emissions$Element)\n  )),\n  cbind(\"items\", as.matrix(\n    unique(faostat_total_emissions$`Item Code`)\n  ), as.matrix(unique(\n    faostat_total_emissions$`Item`\n  )))\n)) |&gt;\n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nelements\n7234\nDirect emissions (N2O)\n\n\nelements\n7236\nIndirect emissions (N2O)\n\n\nelements\n7230\nEmissions (N2O)\n\n\nelements\n724313\nEmissions (CO2eq) from N2O (AR5)\n\n\nelements\n723113\nEmissions (CO2eq) (AR5)\n\n\nelements\n7225\nEmissions (CH4)\n\n\nelements\n724413\nEmissions (CO2eq) from CH4 (AR5)\n\n\nelements\n7273\nEmissions (CO2)\n\n\nelements\n717815\nEmissions (CO2eq) from F-gases (AR5)\n\n\nitems\n5064\nCrop Residues\n\n\nitems\n5060\nRice Cultivation\n\n\nitems\n5066\nBurning - Crop residues\n\n\nitems\n5058\nEnteric Fermentation\n\n\nitems\n5059\nManure Management\n\n\nitems\n5063\nManure left on Pasture\n\n\nitems\n5062\nManure applied to Soils\n\n\nitems\n5061\nSynthetic Fertilizers\n\n\nitems\n6729\nDrained organic soils\n\n\nitems\n67292\nDrained organic soils (CO2)\n\n\nitems\n67291\nDrained organic soils (N2O)\n\n\nitems\n6994\nOn-farm energy use\n\n\nitems\n6751\nForestland\n\n\nitems\n6750\nNet Forest conversion\n\n\nitems\n6795\nSavanna fires\n\n\nitems\n6993\nFires in organic soils\n\n\nitems\n6992\nForest fires\n\n\nitems\n69921\nFires in humid tropical forests\n\n\nitems\n6991\nAgrifood Systems Waste Disposal\n\n\nitems\n6504\nFertilizers Manufacturing\n\n\nitems\n6508\nFood Retail\n\n\nitems\n6505\nFood Household Consumption\n\n\nitems\n6815\nFood Transport\n\n\nitems\n6821\nEnergy\n\n\nitems\n6817\nIPPU\n\n\nitems\n6818\nWaste\n\n\nitems\n6819\nOther\n\n\nitems\n6518\nAgrifood systems\n\n\nitems\n6996\nFarm gate\n\n\nitems\n6516\nLand Use change\n\n\nitems\n6517\nPre- and Post- Production\n\n\nitems\n6995\nEmissions on agricultural land\n\n\nitems\n5084\nEmissions from crops\n\n\nitems\n5085\nEmissions from livestock\n\n\nitems\n1711\nIPCC Agriculture\n\n\nitems\n1709\nAgricultural Soils\n\n\nitems\n1707\nLULUCF\n\n\nitems\n6824\nAFOLU\n\n\nitems\n6825\nAll sectors with LULUCF\n\n\nitems\n6829\nAll sectors without LULUCF\n\n\nitems\n6997\nPesticides Manufacturing\n\n\nitems\n6507\nFood Processing\n\n\nitems\n6506\nFood Packaging\n\n\n\n\n\n\n\n\n# Filter elements of interest\ntransformed_faostat_total &lt;- faostat_total_emissions |&gt;\n  filter(\n    `Item Code` %in% c(\n      5061, 67292, \n      67291, 6751, 6750, \n      6795,  6993, 6992\n    ),\n    # `Item Code` %in% c(\n    #   5064,  5060, 5066, \n    #   5058,  5059, 5063, \n    #   5062,  5061, 67292, \n    #   67291, 6751, 6750, \n    #   6795,  6993, 6992\n    # ), \n    `Element Code` %in% c(\n      724313, 724413,\n      7273, 717815)\n    ) |&gt; \n  rename(\n    `Driver Code` = `Item Code`,\n    Driver = Item\n  ) |&gt; \n  mutate(\n    `Sector Code` = 9999,\n    Sector = \"Undetermined\",\n    Sector = case_when(\n      `Driver Code`== 5061 ~\n      \"Manufacture of fertilizers and nitrogen compounds\",\n      `Driver Code` %in% c(67291, 6795) ~\n        \"Undetermined from Agriculture\",\n      `Driver Code` %in% c(67292, 6750, 6751, 6992, 6993) ~\n        \"Undetermined from LULUCF\",\n      .default = Sector),\n    `Sector Code` = case_when(\n      `Driver Code`== 5061 ~\n      2012,\n      `Driver Code` %in% c(67291, 6795) ~\n        9998,\n      `Driver Code` %in% c(67292, 6750, 6751, 6992, 6993) ~\n        9997,\n      .default = `Sector Code`)\n  ) |&gt;\n  # Finally select in order to \n  # bind to livestock and crops\n  select(\n    `Area Code`,\n    Area,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    Year,\n    Unit,\n    Value\n  )\n\nThen the resulting items:\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"elements\", as.matrix(\n    unique(transformed_faostat_total$`Element Code`)\n  ), as.matrix(\n    unique(transformed_faostat_total$Element)\n  )),\n  cbind(\"Drivers\", as.matrix(\n    unique(transformed_faostat_total$`Driver Code`)\n  ), as.matrix(unique(\n    transformed_faostat_total$`Driver`\n  )))\n)) |&gt;\n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nelements\n724313\nEmissions (CO2eq) from N2O (AR5)\n\n\nelements\n7273\nEmissions (CO2)\n\n\nelements\n724413\nEmissions (CO2eq) from CH4 (AR5)\n\n\nDrivers\n5061\nSynthetic Fertilizers\n\n\nDrivers\n67292\nDrained organic soils (CO2)\n\n\nDrivers\n67291\nDrained organic soils (N2O)\n\n\nDrivers\n6751\nForestland\n\n\nDrivers\n6750\nNet Forest conversion\n\n\nDrivers\n6795\nSavanna fires\n\n\nDrivers\n6993\nFires in organic soils\n\n\nDrivers\n6992\nForest fires\n\n\n\n\n\n\n\nThen we move to the individual crops and animals datasets. In this case, not only do we need to clean subtotals and totals to avoid duplication, we also need to estimate GWP, because emissions are expressed in volume units of each gas. This is done in Listing 1 for crops below and Listing 2 for animals.\n\n\nCrops\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"elements\", as.matrix(\n    unique(faostat_crops$`Element Code`)\n  ), as.matrix(\n    unique(faostat_crops$Element)\n  )),\n  cbind(\"items\", as.matrix(\n    unique(faostat_crops$`Item Code`)\n  ), as.matrix(unique(\n    faostat_crops$`Item`\n  )))\n)) |&gt;\n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nelements\n72392\nCrop residues (N content)\n\n\nelements\n72302\nCrop residues (Emissions N2O)\n\n\nelements\n72342\nCrop residues (Direct emissions N2O)\n\n\nelements\n72362\nCrop residues (Indirect emissions N2O)\n\n\nelements\n7245\nBurning crop residues (Biomass burned, dry matter)\n\n\nelements\n72307\nBurning crop residues (Emissions N2O)\n\n\nelements\n72257\nBurning crop residues (Emissions CH4)\n\n\nelements\n5312\nArea harvested\n\n\nelements\n72255\nRice cultivation (Emissions CH4)\n\n\nelements\n72430\nCrops total (Emissions N2O)\n\n\nelements\n72440\nCrops total (Emissions CH4)\n\n\nelements\n516202\nNitrogen fertilizer content applied that leaches\n\n\nelements\n516201\nNitrogen fertilizer content applied that volatilises\n\n\nelements\n5162\nSynthetic fertilizers (Agricultural use)\n\n\nelements\n72303\nSynthetic fertilizers (Emissions N2O)\n\n\nelements\n72343\nSynthetic fertilizers (Direct emissions N2O)\n\n\nelements\n723632\nIndirect emissions (N2O that leaches) (Synthetic fertilizers)\n\n\nelements\n723631\nIndirect emissions (N2O that volatilises) (Synthetic fertilizers)\n\n\nitems\n44\nBarley\n\n\nitems\n56\nMaize (corn)\n\n\nitems\n156\nSugar cane\n\n\nitems\n79\nMillet\n\n\nitems\n116\nPotatoes\n\n\nitems\n27\nRice\n\n\nitems\n15\nWheat\n\n\nitems\n1712\nAll Crops\n\n\nitems\n3102\nNutrient nitrogen N (total)\n\n\nitems\n176\nBeans, dry\n\n\nitems\n75\nOats\n\n\nitems\n71\nRye\n\n\nitems\n83\nSorghum\n\n\nitems\n236\nSoya beans\n\n\n\n\n\n\n\n\n\n\n\nListing 1: GWP calculation for crops\n\n\n# Filter elements of interest\ntransformed_faostat_crops &lt;- faostat_crops |&gt; \n  filter(\n    ! `Element Code` %in% c(\n      5312, 5162, 516201, 516202,\n      7245, 72303, 72430, 72440, \n      72342, 72343, 72362,\n      723631, 723632, 72392\n    ),\n    `Item Code` != 1712\n    # ! `Element Code` %in% c(\n    #   5162, 516201, 516202,\n    #   7245, 72430, 72440,\n    #   72342, 72362,\n    #   723631, 723632, 72392\n    # )\n    ) |&gt; \n  # Global Warming Potential\n  mutate(\n    Value = case_when(\n      `Element Code` %in% c(\n        72255, 72257\n      ) ~ Value * 28, # GWP CH4 AR5 100-year horizon\n      `Element Code` %in% c(\n        72302,72307\n      ) ~ Value * 265 # GWP N2O AR5 100-year horizon\n    )\n  ) |&gt; \n  mutate(\n    temp_code = case_when(\n      `Element Code` %in% c(\n        72255, 72257\n      ) ~ 724413,\n      `Element Code` %in% c(\n        72307, 72302\n      ) ~ 724313,\n      .default = NA\n    ),\n    temp = case_when(\n      `Element Code` %in% c(\n        72255, 72257\n      ) ~ \"Emissions (CO2eq) from CH4 (AR5)\",\n      `Element Code` %in% c(\n        72307, 72302\n      ) ~ \"Emissions (CO2eq) from N2O (AR5)\",\n      .default = NA\n    )\n  ) |&gt; \n  rename(\n    `Sector Code` = `Item Code`,\n    `Sector` = Item,\n    `Driver Code` = `Element Code`,\n    Driver = Element,\n    `Element Code`= temp_code,\n    Element = temp\n  )|&gt; \n  mutate(\n    `Sector Code` = sprintf(\"%04d\", `Sector Code`)\n  ) |&gt; \n  # Finally select in order to \n  # bind to livestock and crops\n  select(\n    `Area Code`,\n    Area,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    Year,\n    Unit,\n    Value\n  )\n\n\n\n\nThe resulting items\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"Sectors\", as.matrix(\n    unique(transformed_faostat_crops$`Sector Code`)\n  ), as.matrix(\n    unique(transformed_faostat_crops$Sector)\n  )),\n  cbind(\"Drivers\", as.matrix(\n    unique(transformed_faostat_crops$`Driver Code`)\n  ), as.matrix(unique(\n    transformed_faostat_crops$`Driver`\n  )))\n)) |&gt;\n  arrange(V1,V2) |&gt; \n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nDrivers\n72255\nRice cultivation (Emissions CH4)\n\n\nDrivers\n72257\nBurning crop residues (Emissions CH4)\n\n\nDrivers\n72302\nCrop residues (Emissions N2O)\n\n\nDrivers\n72307\nBurning crop residues (Emissions N2O)\n\n\nSectors\n0015\nWheat\n\n\nSectors\n0027\nRice\n\n\nSectors\n0044\nBarley\n\n\nSectors\n0056\nMaize (corn)\n\n\nSectors\n0071\nRye\n\n\nSectors\n0075\nOats\n\n\nSectors\n0079\nMillet\n\n\nSectors\n0083\nSorghum\n\n\nSectors\n0116\nPotatoes\n\n\nSectors\n0156\nSugar cane\n\n\nSectors\n0176\nBeans, dry\n\n\nSectors\n0236\nSoya beans\n\n\n\n\n\n\n\nFor reference\n\ntransformed_faostat_crops |&gt; \n  filter(\n    Year == 2018,\n    Area == \"Nigeria\"\n  ) |&gt; \n  group_by(\n    Driver,\n    Sector,\n    Unit\n  ) |&gt; \n  summarize(\n    Total = sum(Value, na.rm = T)\n  ) |&gt; \n  ungroup() |&gt; \n  gt()\n\n`summarise()` has grouped output by 'Driver', 'Sector'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\nDriver\nSector\nUnit\nTotal\n\n\n\n\nBurning crop residues (Emissions CH4)\nMaize (corn)\nkt\n494.5136\n\n\nBurning crop residues (Emissions CH4)\nRice\nkt\n169.0444\n\n\nBurning crop residues (Emissions CH4)\nSugar cane\nkt\n4.3456\n\n\nBurning crop residues (Emissions CH4)\nWheat\nkt\n1.5596\n\n\nBurning crop residues (Emissions N2O)\nMaize (corn)\nkt\n121.3435\n\n\nBurning crop residues (Emissions N2O)\nRice\nkt\n41.4725\n\n\nBurning crop residues (Emissions N2O)\nSugar cane\nkt\n1.0600\n\n\nBurning crop residues (Emissions N2O)\nWheat\nkt\n0.3710\n\n\nCrop residues (Emissions N2O)\nMaize (corn)\nkt\n556.6590\n\n\nCrop residues (Emissions N2O)\nMillet\nkt\n114.4005\n\n\nCrop residues (Emissions N2O)\nPotatoes\nkt\n41.6580\n\n\nCrop residues (Emissions N2O)\nRice\nkt\n825.1040\n\n\nCrop residues (Emissions N2O)\nSorghum\nkt\n537.7910\n\n\nCrop residues (Emissions N2O)\nSoya beans\nkt\n71.0465\n\n\nCrop residues (Emissions N2O)\nSugar cane\nkt\n0.0000\n\n\nCrop residues (Emissions N2O)\nWheat\nkt\n6.3070\n\n\nRice cultivation (Emissions CH4)\nRice\nkt\n12462.5760\n\n\n\n\n\n\n\n\n\nLivestock\n\n\n\n\nListing 2: GWP calculation for animals\n\n\n# Filter elements of interest\ntransformed_faostat_livestock &lt;- faostat_livestock |&gt; \n  filter(\n    ! `Element Code` %in% c(\n      72380,  72381, 72386, \n      723601, 723602, 723611, \n      723612, 723801, 723802, \n      723811, 723812, 72340, \n      72341, 72346, 72360, \n      72361, 72366, 72431,\n      72441\n    ),\n    ! `Item Code` %in% c(\n      1757, 1759, 1760,\n      1054, 2029, 1749,\n      1048, 1755\n    )) |&gt;\n  mutate(\n    Value = case_when(\n      `Element Code` %in% c(\n        72254, 72256\n      ) ~ Value * 28, # GWP CH4 AR5 100-year horizon\n      `Element Code` %in% c(\n        72300, 72301, 72306\n      ) ~ Value * 265, # GWP N2O AR5 100-year horizon\n      .default = Value\n    )\n  ) |&gt; \n  mutate(\n    temp_code = case_when(\n      `Element Code` %in% c(\n        72254, 72256\n      ) ~ 724413,\n      `Element Code` %in% c(\n        72300, 72301, 72306\n      ) ~ 724313,\n       `Element Code` == 5111 ~ 5111,\n      .default = NA\n    ),\n    temp = case_when(\n      `Element Code` %in% c(\n        72254, 72256\n      ) ~ \"Emissions (CO2eq) from CH4 (AR5)\",\n      `Element Code` %in% c(\n        72300, 72301, 72306\n      ) ~ \"Emissions (CO2eq) from N2O (AR5)\",\n      `Element Code` == 5111 ~ \"Number of animals\",\n      .default = NA\n    )\n  ) |&gt; \n  rename(\n    `Driver Code` = `Element Code`,\n    Driver = Element,\n    `Sector Code` = `Item Code`,\n    Sector = Item,\n    `Element Code`= temp_code,\n    Element = temp\n  )|&gt;\n  mutate(\n    `Sector Code` = sprintf(\"%04d\", `Sector Code`)\n  ) |&gt; \n  # Finally select in order to \n  # bind to livestock and crops\n  select(\n    `Area Code`,\n    Area,\n    `Driver Code`,\n    Driver,\n    `Sector Code`,\n    Sector,\n    `Element Code`,\n    Element,\n    Year,\n    Unit,\n    Value\n  )\n\n\n\n\nThe resulting items\n\n# For reference\nas.data.frame(rbind(\n  cbind(\"Drivers\", as.matrix(\n    unique(transformed_faostat_livestock$`Driver Code`)\n  ), as.matrix(\n    unique(transformed_faostat_livestock$Driver)\n  )),\n  cbind(\"Sectors\", as.matrix(\n    unique(transformed_faostat_livestock$`Sector Code`)\n  ), as.matrix(unique(\n    transformed_faostat_livestock$`Sector`\n  )))\n)) |&gt;\n  arrange(V1,V2) |&gt; \n  gt()\n\n\n\n\n\n\n\nV1\nV2\nV3\n\n\n\n\nDrivers\n5111\nStocks\n\n\nDrivers\n72254\nEnteric fermentation (Emissions CH4)\n\n\nDrivers\n72256\nManure management (Emissions CH4)\n\n\nDrivers\n72300\nManure left on pasture (Emissions N2O)\n\n\nDrivers\n72301\nEmissions (N2O) (Manure applied)\n\n\nDrivers\n72306\nManure management (Emissions N2O)\n\n\nSectors\n0946\nBuffalo\n\n\nSectors\n0960\nCattle, dairy\n\n\nSectors\n0961\nCattle, non-dairy\n\n\nSectors\n0976\nSheep\n\n\nSectors\n1016\nGoats\n\n\nSectors\n1049\nSwine, market\n\n\nSectors\n1051\nSwine, breeding\n\n\nSectors\n1052\nChickens, layers\n\n\nSectors\n1053\nChickens, broilers\n\n\nSectors\n1068\nDucks\n\n\nSectors\n1079\nTurkeys\n\n\nSectors\n1096\nHorses\n\n\nSectors\n1107\nAsses\n\n\nSectors\n1110\nMules and hinnies\n\n\nSectors\n1126\nCamels\n\n\nSectors\n1177\nLlamas\n\n\n\n\n\n\n\n\n\nDataset binding\n\ngwp_faostat_total &lt;- rbind(\n  transformed_faostat_total,\n  transformed_faostat_crops,\n  transformed_faostat_livestock) |&gt;\n  left_join(fao_countries[,c(1,3)], join_by(`Area Code`)) |&gt;\n  left_join(fao_ipcc, join_by(Driver)) |&gt; \n  filter(! is.na(ISO3)) |&gt; \n  relocate(`IPCC Code`, `IPCC`, .before = Year) |&gt; \n  relocate(ISO3, .before = `Driver Code`)\n  \n\n# And save to RDS\nsaveRDS(gwp_faostat_total, \"emdb/data/outputs/gwp_faostat_total.rds\")\n\nobjects &lt;- c(\n  \"faostat_total_emissions\", \n  \"faostat_crops\", \n  \"faostat_livestock\")\n\n# Remove only variables if they exist\nrm(list = objects[objects %in% ls()])\n\nOriginally, we only sourced data from EDGAR and FAOSTAT, but early tests showed that the way in which emissions from energy (specifically fuel combustion) are expressed in EDGAR, does not allow CGE analysts to link to specific drivers. That means that we know how many tons of CO2 are emitted from electricity generation, for example, but not whether they come from the burning of coal or from diesel. An early test to overcome this limitation allowed us to use energy balances (AFREC 2024) to expand this dimension in the case of Nigeria. However, since we needed a source with information for countries outside that continent, we turned to the UN Energy Statistics Database (UNSD 2023) for global coverage. The publicly available individual commodity datasets were cleaned from duplicates and combined into the single product used below, but the code to conduct those first steps is also included in our repository here and here.",
    "crumbs": [
      "Methods",
      "Processing code"
    ]
  },
  {
    "objectID": "documentation/methods/querying_the_database.html",
    "href": "documentation/methods/querying_the_database.html",
    "title": "Querying the Database",
    "section": "",
    "text": "In this session, we query the database and tailor it to a particular SAM structure for Nigeria.\n\n\n\n# Clean workspace\nrm(list = ls())\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(openxlsx)\n\n\n\n\n\n# Emissions long data\ntotal_emissions &lt;- readRDS(\"emdb/data/outputs/gwp_total_emissions_long.rds\")\ntotal_emissions_pivot &lt;- readRDS(\"emdb/data/outputs/gwp_total_emissions_pivot.rds\")\n\n# SAM Equivalence table\nsam_equivalence &lt;- read_xlsx(\n  \"emdb/data/sam/nga/SAM-Nigeria-2018-Equivalence.xlsx\",\n  sheet = \"sam-equivalence\")\n\n# SAM elements\nsam_names &lt;- read_xlsx(\n  \"emdb/data/sam/nga/SAM-Nigeria-2018.xlsx\",\n  range = \"B9:B224\",\n  sheet = \"SAM-names\",\n  col_names = F)\n\ncolnames(sam_names) &lt;- \"SAM Name\"\n\n# Add Undetermined to SAM elements\nundetermined_list &lt;- sam_equivalence[startsWith(sam_equivalence$`ISIC Detail`, \"9999\"), 1]\ncolnames(undetermined_list) &lt;- \"SAM Name\"\nsam_names &lt;- rbind(sam_names, undetermined_list)\n\n\n\n\nWe ask for an equivalence structure sam_equivalence in this case, between the ISIC Detail and the SAM. Through the use of R factors, we can make sure that the joined structure of the SAM is in the final product.\n\nnigeria_sam_emissions_2021 &lt;- total_emissions |&gt; \n  filter(\n    ISO3 == \"NGA\",\n    Year == 2018,\n    #Unit == \"kt\"\n  ) |&gt; \n  left_join(\n    sam_equivalence,\n    join_by(`ISIC Detail`)\n  ) |&gt; \n  mutate(\n    `SAM Name` = if_else(\n      is.na(`SAM Name`), \n      `ISIC Detail`,\n      `SAM Name`\n    )\n  ) |&gt;\n  mutate(\n    `SAM Name` = factor(\n      `SAM Name`,\n      levels = sam_names$`SAM Name`\n    )\n  ) |&gt; \n  pivot_wider(\n    id_cols = c(\n      Area,\n      ISO3,\n      Year,\n      `IPCC Code`,\n      IPCC,\n      # Category,\n      Driver,\n      `Emission Type`,\n      Unit\n    ),\n    names_from = c(`SAM Name`),\n    values_from = Value,\n    values_fn = sum,\n    names_expand = T\n  ) |&gt; \n  arrange(Unit) |&gt; \n  mutate(\n    Total = rowSums(across(where(is.numeric) & -3), na.rm = TRUE)\n  )\n\n# and save to file\n\nwrite.xlsx(\n  nigeria_sam_emissions_2021,\n  file = \"emdb/data/outputs/emissions_nigeria_2018.xlsx\")\n\n\n\n\ntest_nigeria18 &lt;- total_emissions |&gt; \n  filter(Year == 2018,\n         Area ==\"Nigeria\")\ntest_nigeria18_pivot &lt;- total_emissions_pivot |&gt; \n  filter(Year == 2018,\n         Area ==\"Nigeria\")\nwrite.xlsx(\n  test_nigeria18,\n  file = \"emdb/data/outputs/test_nigeria18.xlsx\")\nwrite.xlsx(\n  test_nigeria18_pivot,\n  file = \"emdb/data/outputs/test_nigeria18_pivot.xlsx\")"
  },
  {
    "objectID": "documentation/methods/querying_the_database.html#libraries",
    "href": "documentation/methods/querying_the_database.html#libraries",
    "title": "Querying the Database",
    "section": "",
    "text": "# Clean workspace\nrm(list = ls())\n\n# Load libraries\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(openxlsx)"
  },
  {
    "objectID": "documentation/methods/querying_the_database.html#datasets",
    "href": "documentation/methods/querying_the_database.html#datasets",
    "title": "Querying the Database",
    "section": "",
    "text": "# Emissions long data\ntotal_emissions &lt;- readRDS(\"emdb/data/outputs/gwp_total_emissions_long.rds\")\ntotal_emissions_pivot &lt;- readRDS(\"emdb/data/outputs/gwp_total_emissions_pivot.rds\")\n\n# SAM Equivalence table\nsam_equivalence &lt;- read_xlsx(\n  \"emdb/data/sam/nga/SAM-Nigeria-2018-Equivalence.xlsx\",\n  sheet = \"sam-equivalence\")\n\n# SAM elements\nsam_names &lt;- read_xlsx(\n  \"emdb/data/sam/nga/SAM-Nigeria-2018.xlsx\",\n  range = \"B9:B224\",\n  sheet = \"SAM-names\",\n  col_names = F)\n\ncolnames(sam_names) &lt;- \"SAM Name\"\n\n# Add Undetermined to SAM elements\nundetermined_list &lt;- sam_equivalence[startsWith(sam_equivalence$`ISIC Detail`, \"9999\"), 1]\ncolnames(undetermined_list) &lt;- \"SAM Name\"\nsam_names &lt;- rbind(sam_names, undetermined_list)"
  },
  {
    "objectID": "documentation/methods/querying_the_database.html#matching-to-sam-structure",
    "href": "documentation/methods/querying_the_database.html#matching-to-sam-structure",
    "title": "Querying the Database",
    "section": "",
    "text": "We ask for an equivalence structure sam_equivalence in this case, between the ISIC Detail and the SAM. Through the use of R factors, we can make sure that the joined structure of the SAM is in the final product.\n\nnigeria_sam_emissions_2021 &lt;- total_emissions |&gt; \n  filter(\n    ISO3 == \"NGA\",\n    Year == 2018,\n    #Unit == \"kt\"\n  ) |&gt; \n  left_join(\n    sam_equivalence,\n    join_by(`ISIC Detail`)\n  ) |&gt; \n  mutate(\n    `SAM Name` = if_else(\n      is.na(`SAM Name`), \n      `ISIC Detail`,\n      `SAM Name`\n    )\n  ) |&gt;\n  mutate(\n    `SAM Name` = factor(\n      `SAM Name`,\n      levels = sam_names$`SAM Name`\n    )\n  ) |&gt; \n  pivot_wider(\n    id_cols = c(\n      Area,\n      ISO3,\n      Year,\n      `IPCC Code`,\n      IPCC,\n      # Category,\n      Driver,\n      `Emission Type`,\n      Unit\n    ),\n    names_from = c(`SAM Name`),\n    values_from = Value,\n    values_fn = sum,\n    names_expand = T\n  ) |&gt; \n  arrange(Unit) |&gt; \n  mutate(\n    Total = rowSums(across(where(is.numeric) & -3), na.rm = TRUE)\n  )\n\n# and save to file\n\nwrite.xlsx(\n  nigeria_sam_emissions_2021,\n  file = \"emdb/data/outputs/emissions_nigeria_2018.xlsx\")\n\n\n\n\ntest_nigeria18 &lt;- total_emissions |&gt; \n  filter(Year == 2018,\n         Area ==\"Nigeria\")\ntest_nigeria18_pivot &lt;- total_emissions_pivot |&gt; \n  filter(Year == 2018,\n         Area ==\"Nigeria\")\nwrite.xlsx(\n  test_nigeria18,\n  file = \"emdb/data/outputs/test_nigeria18.xlsx\")\nwrite.xlsx(\n  test_nigeria18_pivot,\n  file = \"emdb/data/outputs/test_nigeria18_pivot.xlsx\")"
  },
  {
    "objectID": "documentation/index.html",
    "href": "documentation/index.html",
    "title": "Documentation",
    "section": "",
    "text": "Database Preparation describes the steps followed to create the database.\nProcessing code provides a commented description of the R code used to process the MAFAP Emissions Database."
  },
  {
    "objectID": "documentation/methods/emissions_db_construction.html",
    "href": "documentation/methods/emissions_db_construction.html",
    "title": "PolOpT Emissions Database Construction",
    "section": "",
    "text": "The Monitoring and Analyzing Food and Agricultural Policies (MAFAP) program seeks to establish country owned and sustainable systems to monitor, analyze, and reform food and agricultural policies to enable more effective, efficient and inclusive policy frameworks. Since policies are only enacted when they are properly funded, FAO’s Policy Optimization Tool (PolOpT) (Sánchez and Cicowiez 2022, 2023) is particularly geared towards helping countries—the agricultural public sector, in particular—optimize public budgets in the face of competing objectives, like economic growth, poverty reduction, better nutrition, or increasing yields, for example.\nIn the face of increasing vulnerability, climate risk mitigation and adaptation objectives have also become a part of the policy dialogue, as different international commitments (e.g. the Paris Agreement) present new demands and challenges to governments. To be able to provide objective functions within MAFAP tools, it has become necessary to extend its socioeconomic reach to include environmental objectives. As an extension of the MAFAP CGE modelling tool, the Global Emissions Database aims to provide a seamless integration of data on anthropogenic emissions of greenhouse gases and air pollution with structural analysis frameworks like Computable General Equilibrium and Input-Output models.\nHere we describe the approach used to construct an anthropogenic emissions accounting satellite framework by economic activity and driver, using globally available datasets. We aim to maintain compatibility with the System of National Accounts (SNA) with which economic performance is measured (European Commission et al. 2009). Where possible, we adopt approaches suggested by previous efforts at harmonization between Greenhouse Gas Inventories and SEEA pilot implementations (Eurostat 2015; Flachenecker, Guidetti, and Pionnier 2018; Gutman et al. 2024).\nEmissions from combustion are estimated at the economic activity level using the International Industrial Standard Classification—ISIC—(United Nations 2008) and driver, using the Tier 1 method of the Intergovernmental Panel on Climate Change—IPCC—(IPCC 1996, 2006) and energy use information from the Energy Statistics Database (UNSD 2023). Emissions from Industrial Processes and Waste come from EDGAR (Crippa et al. 2023) and are mapped to economic activities following a broadly tested global approach that facilitates use with CGE frameworks; i.e. that of the Global Trade Analysis Project—GTAP—(Aguiar et al. 2019; Chepeliev 2024). Emissions from Agriculture are sourced from FAOSTAT (FAO 2024) and mapped to ISIC economic activities. Individual drivers are left for the practitioner to map to their own structure (i.e. output by industries, endowment by industries, input use by industries, and consumption by households).",
    "crumbs": [
      "Methods",
      "Database peparation"
    ]
  },
  {
    "objectID": "documentation/methods/emissions_db_construction.html#overview",
    "href": "documentation/methods/emissions_db_construction.html#overview",
    "title": "PolOpT Emissions Database Construction",
    "section": "Overview",
    "text": "Overview\nOur goal is to leverage valuable emissions data from different sources and we have scripted data processing routines to ingest original datasets in tabular format (mainly Excel Files and Comma Separated Values) and manipulate them to conform to a single flat file structure, using the R programming language (R Core Team 2024)1. The original datasets, translated into the much smaller size RDS binary format, as well as the processing scripts, are included with the resulting emissions database repository2.",
    "crumbs": [
      "Methods",
      "Database peparation"
    ]
  },
  {
    "objectID": "documentation/methods/emissions_db_construction.html#total-emissions-from-edgar",
    "href": "documentation/methods/emissions_db_construction.html#total-emissions-from-edgar",
    "title": "PolOpT Emissions Database Construction",
    "section": "Total Emissions from EDGAR",
    "text": "Total Emissions from EDGAR\nWe start with the sourcing of The Emissions Database for Global Atmospheric Research—EDGAR—(Crippa et al., 2023) datasets published by the European Commission because they are comprehensive, covering most of the greenhouse gas emissions inventories domains as shown in Table 1, belonging to 1) energy; 2) Industrial processes and product use; 3) Agriculture, forestry, and other land use; 4) Waste; and 5) Other (mainly indirect emissions from deposition of Nitrogen). This allows us to provide an overview of the coverage needed by our dataset. However, due to the form in which the data is presented in the EDGAR data and our database needs, we only take advantage of emissions data on industrial processes, waste, and “other” (which refers mainly to emissions from the atmospheric deposition of nitrogen). To avoid double counting, we replace emissions from the use of energy (Chapter 1A) with data from the UN Energy Database (UNSD 2023) and emissions from agriculture, forestry, and other land use with data from FAOSTAT (FAO 2024). For comparison purposes, it is important to note that large scale biomass burning with Savannah burning, forest fires, and sources and sinks from land-use, land-use change and forestry (LULUCF) are not covered in EDGAR, but are in FAOSTAT.\n\n\n\nTable 1: EDGAR greenhouse gas inventory domain coverage\n\n\n\n\n\n\n\n\n\nCode\nIPCC Greenhouse Gas Inventory domain\n\n\n\n\n1.A.1.a\nMain Activity Electricity and Heat Production\n\n\n1.A.1.bc\nPetroleum Refining - Manufacture of Solid Fuels and Other Energy Industries\n\n\n1.A.2\nManufacturing Industries and Construction\n\n\n1.A.3.a\nCivil Aviation\n\n\n1.A.3.b_noRES\nRoad Transportation no resuspension\n\n\n1.A.3.c\nRailways\n\n\n1.A.3.d\nWater-borne Navigation\n\n\n1.A.3.e\nOther Transportation\n\n\n1.A.4\nResidential and other sectors\n\n\n1.A.5\nNon-Specified\n\n\n1.B.1\nSolid Fuels\n\n\n1.B.2\nOil and Natural Gas\n\n\n2.A.1\nCement production\n\n\n2.A.2\nLime production\n\n\n2.A.3\nGlass Production\n\n\n2.A.4\nOther Process Uses of Carbonates\n\n\n2.B\nChemical Industry\n\n\n2.C\nMetal Industry\n\n\n2.D\nNon-Energy Products from Fuels and Solvent Use\n\n\n2.E\nElectronics Industry\n\n\n2.F\nProduct Uses as Substitutes for Ozone Depleting Substances\n\n\n2.G\nOther Product Manufacture and Use\n\n\n3.A.1\nEnteric Fermentation\n\n\n3.A.2\nManure Management\n\n\n3.C.1\nEmissions from biomass burning\n\n\n3.C.2\nLiming\n\n\n3.C.3\nUrea application\n\n\n3.C.4\nDirect N2O Emissions from managed soils\n\n\n3.C.5\nIndirect N2O Emissions from managed soils\n\n\n3.C.6\nIndirect N2O Emissions from manure management\n\n\n3.C.7\nRice cultivations\n\n\n4.A\nSolid Waste Disposal\n\n\n4.B\nBiological Treatment of Solid Waste\n\n\n4.C\nIncineration and Open Burning of Waste\n\n\n4.D\nWastewater Treatment and Discharge\n\n\n5.A\nIndirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3\n\n\n5.B\nFossil fuel fires\n\n\n\n\n\n\nSource: authors based on Crippa, et al. (2023).\nEDGAR datasets contain disaggregated information for the elements in the table above in Gigagrams for CO2, CO2 from biofuels, CH4, N2O, and Fluorinated greenhouse gases (F-Gases) PFC, HFC, HCFC, and NF3. However, while they provide a single dataset with aggregate GHG emissions expressed in CO2eq using the Global Warming Potential values of the Fifth Assessment Report of the IPCC with a 100-year horizon, all gases are summed into a single figure for each element in Table 1, not distinguished from the individual shares of CO2 tons equivalent contributed by each gas. For that reason, we used the individualized datasets per gas in Gigagrams and performed the Global Warming Potential AR5 calculation ourselves using coefficients from Myhre et al. Myhre et al. (2013), except for F-Gases, for which the conversion was made by EDGAR and kept separate as needed.\n\n\n\nTable 2: Conversion coefficients for methane and nitrous oxide\n\n\n\n\n\n\n\n\n\nGas\nGlobal Warming Potential Values AR5 100-year horizon\n\n\n\n\nMethane (CH4)\n28 CO2 tons equivalent / Gigagram\n\n\nNitrous Oxide (N2O)\n265 CO2 tons equivalent / Gigagram\n\n\n\n\n\n\nSource: Myhre et al. (2013, 731).\nAs explained above, while the Edgar dataset is very comprehensive, it lacks the disaggregation by driver (intermediate input, output, endowment, or consumption) to satisfy the needs of CGE studies, when it comes to energy and certain agricultural aspects. That means that it is possible to identify to which volume of the IPCC a certain emission value belongs, but not which fuel product is responsible for it. For example, we can identify that CO2 emissions are emitted by the Road Transportation sector, but not whether the emissions come from the burning of Diesel or from Bioethanol or any other fuel type. For that reason, we replace the values related to energy with those from our own estimates using the United Nations Energy Database and default emission factors, as well as those elements related to agriculture and LULUCF with emissions data from FAOSTAT at the driver level (explained in the FAOSTAT section below). For completeness, the remaining domains; i.e. industrial processes, waste, and others are linked to total output of specific economic activities, using the International Standard Industrial Classification (United Nations, 2008) where possible (see Table 3).\n\n\n\nTable 3: Mapping from EDGAR to individual ISIC economic activities\n\n\n\n\n\n\n\n\n\n\n\nIPCC Code\nIPCC\nISIC Code\nISIC\n\n\n\n\n2.A.1\nCement production\n2394\nManufacture of cement, lime and plaster\n\n\n2.A.2\nLime production\n2394\nManufacture of cement, lime and plaster\n\n\n2.A.3\nGlass Production\n2310\nManufacture of glass and glass products\n\n\n2.A.4\nOther Process Uses of Carbonates\n9999\nUndetermined\n\n\n2.B\nChemical Industry\n2011\nManufacture of basic chemicals\n\n\n2.C\nMetal Industry\n2410\nManufacture of basic iron and steel\n\n\n2.D\nNon-Energy Products from Fuels and Solvent Use\n9999\nUndetermined\n\n\n2.E\nElectronics Industry\n2640\nManufacture of consumer electronics\n\n\n2.F\nProduct Uses as Substitutes for Ozone Depleting Substances\n9999\nUndetermined\n\n\n2.G\nOther Product Manufacture and Use\n9999\nUndetermined\n\n\n4.A\nSolid Waste Disposal\n3821\nTreatment and disposal of non-hazardous waste\n\n\n4.B\nBiological Treatment of Solid Waste\n3822\nTreatment and disposal of hazardous waste\n\n\n4.C\nIncineration and Open Burning of Waste\n3822\nTreatment and disposal of hazardous waste",
    "crumbs": [
      "Methods",
      "Database peparation"
    ]
  },
  {
    "objectID": "documentation/methods/emissions_db_construction.html#emissions-from-agriculture-and-lulucf",
    "href": "documentation/methods/emissions_db_construction.html#emissions-from-agriculture-and-lulucf",
    "title": "PolOpT Emissions Database Construction",
    "section": "Emissions from Agriculture and LULUCF",
    "text": "Emissions from Agriculture and LULUCF\nData on CO2, CH4, and N2O emissions from Agriculture, Forestry, and Other Land Use, including Land Use Change were sourced from FAOSTAT3. The level of disaggregation of its individual datasets allows us to identify the driving agricultural product (crop) or endowment (animal assets or cropland area) behind the emission of a specific gas. Since values are expressed in kilotons (kt) of each GHG, we converted them to Global Warming Potential AR5 for a 100-year horizon using the values in Table 2. To facilitate the mapping to CGE and Input-Output frameworks, we added a correspondence to individual ISIC economic activities responsible for the emission, where possible.\nFAOSTAT datasets go beyond the elements stipulated in the third category of an IPCC inventory, and provide information on energy use by the agricultural sector, as well as emissions from industrial processes and waste. Since we source those from EDGAR for all economic sectors, we only use data from the domains shown in Table 4 from FAOSTAT.\n\n\n\n\nTable 4: FAOSTAT domains sourced\n\n\n\n\n\n\n\n\n\nCode\nSector\n\n\n\n\n3.B.1.a\nLULUCF - Forestland\n\n\n3.B.1.b\nLULUCF - Net Forest conversion\n\n\n3.B.2\nLULUCF - Drained organic soils (CO2)\n\n\n3.B.6.a\nLULUCF - Fires in organic soils\n\n\n3.B.6.b\nLULUCF - Forest fires\n\n\n3.C.1.c\nAgriculture - Savanna fires\n\n\n3.C.5\nAgriculture - Drained organic soils (N2O)\n\n\n3.A.1\nAgriculture - Enteric fermentation (Emissions CH4)\n\n\n3.A.2.a\nAgriculture - Emissions (N2O) (Manure applied)\n\n\n3.A.2.b\nAgriculture - Manure management (Emissions N2O)\n\n\n3.A.2.c\nAgriculture - Manure management (Emissions CH4)\n\n\n3.C.6\nAgriculture - Manure left on pasture (Emissions N2O)\n\n\n3.C.4\nAgriculture - Synthetic Fertilizers\n\n\n3.C.1.a\nAgriculture - Burning crop residues (Emissions CH4)\n\n\n3.C.1.b\nAgriculture - Burning crop residues (Emissions N2O)\n\n\n3.C.7\nAgriculture - Rice cultivation (Emissions CH4)\n\n\n3.C.8\nAgriculture - Crop residues (Emissions N2O)\n\n\n\n\n\n\n\n\n\n\nMore importantly, the reason why we replaced the data from EDGAR on agriculture emissions with FAOSTAT is because of the ability to differentiate the different drivers of those emissions, as well as the separate totals by gas. Table 5 shows the different elements from FAOSTAT available for practitioners to map to inputs, outputs, endowments, or consumption.\n\n\n\n\nTable 5: FAOSTAT domains sourced\n\n\n\n\n\n\n\n\n\nCode\nDriver\n\n\n\n\n0015\nWheat\n\n\n0027\nRice\n\n\n0044\nBarley\n\n\n0056\nMaize (corn)\n\n\n0071\nRye\n\n\n0075\nOats\n\n\n0079\nMillet\n\n\n0083\nSorghum\n\n\n0116\nPotatoes\n\n\n0156\nSugar cane\n\n\n0176\nBeans, dry\n\n\n0236\nSoya beans\n\n\n0946\nBuffalo\n\n\n0960\nCattle, dairy\n\n\n0961\nCattle, non-dairy\n\n\n0976\nSheep\n\n\n1016\nGoats\n\n\n1049\nSwine, market\n\n\n1051\nSwine, breeding\n\n\n1052\nChickens, layers\n\n\n1053\nChickens, broilers\n\n\n1068\nDucks\n\n\n1079\nTurkeys\n\n\n1096\nHorses\n\n\n1107\nAsses\n\n\n1110\nMules and hinnies\n\n\n1126\nCamels\n\n\n1177\nLlamas\n\n\n2012\nManufacture of fertilizers and nitrogen compounds\n\n\n9997\nUndetermined from LULUCF\n\n\n9998\nUndetermined from Agriculture",
    "crumbs": [
      "Methods",
      "Database peparation"
    ]
  },
  {
    "objectID": "documentation/methods/emissions_db_construction.html#greenhouse-gas-emissions-from-stationary-and-mobile-combustion",
    "href": "documentation/methods/emissions_db_construction.html#greenhouse-gas-emissions-from-stationary-and-mobile-combustion",
    "title": "PolOpT Emissions Database Construction",
    "section": "Greenhouse Gas Emissions from Stationary and Mobile Combustion",
    "text": "Greenhouse Gas Emissions from Stationary and Mobile Combustion\nA choice was made to estimate emissions from combustion, although the global datasets that we use already have this information in the aggregate, because it was important to be able to distinguish between the different fuels driving the combustion and the sectors in which this happened. Greenhouse gas emissions from fuel combustion and fugitive emissions were estimated applying Tier 1 coefficients from the 2006 IPCC Guidelines for National Greenhouse Gas Inventories to national information on fuel uses from the United Nations Energy Database (UNSD 2023) using Equation 1. We first applied conversion factors from units of volume (metric tons) to Terajoules from Definitions, Units of Measure and Conversion Factors (United Nations 1987).\n\\[\nE_{GHG,fuel} =  C_{fuel} * F_{GHG, fuel}\n\\tag{1}\\]\nWhere:\n\n\\(E_{GHG,fuel}=\\) Emissions of a given GHG by type of fuel (kg GHG).\n\\(C_{fuel}=\\) Amount of fuel combusted (TJ).\n\\(F_{GHG, fuel}=\\) default emission factor of a given GHG by type of fuel (kg gas/TJ).\n\nThe UN dataset is organized according to the standard construction of Energy Balances and it features transactions related to supply, imports, stock variation, exports, transformation, industrial, and final use of all energy resources. In order to estimate emissions we focused on 39 energy resources subject to combustion or fugitive emissions (shown in Table 6), as well as 88 energy transactions.\n\n\n\nTable 6: Commodities sourced from the UN Energy Database\n\n\n\n\n\n\n\n\n\nDomain\nElements\n\n\n\n\nCommodities\nAnimal waste, Anthracite, Aviation gasoline, Bagasse, Bio jet kerosene, Biodiesel, Biogases, Biogasoline, Black liquor, Blast furnace gas, Brown coal, Lignite brown coal, Lignite brown coal- recoverable resources, Brown coal briquettes, Charcoal, Coke-oven coke, Coke oven gas, Coking coal, Ethane, Fuel oil, Fuelwood, Gas coke, Gas oil/diesel oil, Gasoline-type jet fuel, Gasworks gas, Hard coal, Coal, Kerosene-type jet fuel, Lignite, Liquefied petroleum gas (lpg), Motor gasoline, Municipal waste, Naphtha, Natural gas (including lng), Natural gas, Other bituminous coal, Other coal products, Other hydrocarbons, Other liquid biofuels, Vegetal waste, Peat (for fuel use), Petroleum coke, Refinery gas.",
    "crumbs": [
      "Methods",
      "Database peparation"
    ]
  },
  {
    "objectID": "documentation/methods/emissions_db_construction.html#footnotes",
    "href": "documentation/methods/emissions_db_construction.html#footnotes",
    "title": "PolOpT Emissions Database Construction",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nR was chosen for its information management and data compression facilities. However, the principles used can be easily implemented in Python, Stata, or any other language with similar affordances.↩︎\nThe data is available at: https://renatovargas.github.io/emdb/download.html↩︎\nDatasets are available at https://www.fao.org/faostat/en/#data under the heading “Climate Change: Agrifood systems emissions”.↩︎\nSubsector and Driver both refer to individual products, but are laid out separately in our case, because of the specific needs of PolOpT Social Accounting Matrix structures that disaggregate agriculture activities with more detail. Other databases, such as GTAP (Aguiar et al. 2019; Chepeliev 2024), combine these into a single field where they are all identified as “drivers” and add a second field that describes which type of driver it refers to (input, output, endowment, or final consumption). Creating such a structure is trivial here by removing the agricultural drivers from the Driver column (for those where IPCC code starts with 3) and copying over the elements from the Subsector column.↩︎",
    "crumbs": [
      "Methods",
      "Database peparation"
    ]
  },
  {
    "objectID": "documentation/guides/gears-user-guide.html",
    "href": "documentation/guides/gears-user-guide.html",
    "title": "GEARS User Guide",
    "section": "",
    "text": "This document explains the different elements of the GEARS database and how to best use this resource."
  },
  {
    "objectID": "download.html",
    "href": "download.html",
    "title": "Data Downloads",
    "section": "",
    "text": "Here you can download different versions of the PolOpT Emissions Database."
  },
  {
    "objectID": "download.html#complete-database",
    "href": "download.html#complete-database",
    "title": "Data Downloads",
    "section": "Complete Database",
    "text": "Complete Database\nWe provide annual time series data on emissions of the three main greenhouse gases (CO2, CH4, N2O) and fluorinated gases per sector, country, and driver where possible, expressed in thousand metric tons CO2eq using the 100-year Global Warming Potential (GWP) of the IPCC’s Fifth Assessment Report (AR5), in zipped Comma Separated Values (“.csv”) files, as well as much smaller R dataset files (“.rds”) for convenience.\n\n\n\n\n\n\n\n\nGWP Total Emissions ISIC Pivot provides a wide dataset with ISIC sectors and agriculture subsectors as columns.\n Download .csv \n Download .rds \n\n\nGWP Total Emissions ISIC Long provides a long version with sectors and agriculture subsectors concatenated into a single column.\n Download .csv \n Download .rds \n\n\nGWP Total Emissions provides all descriptive fields in disaggregated form for maximum flexibility.\n Download .csv \n Download .rds"
  },
  {
    "objectID": "download.html#single-country-downloads",
    "href": "download.html#single-country-downloads",
    "title": "Data Downloads",
    "section": "Single Country Downloads",
    "text": "Single Country Downloads\nYou can filter and download the emissions data for a single country using the tool below (depending on your connection, it might take a few seconds for the tool to load.)"
  }
]