---
title: "Querying the Database"
author:
  - name: "Renato Vargas"
    id: rv
    # email: renovargas@gmail.com
    affiliation: 
      - name: "Consultant for FAO"
bibliography: references.bib
---

# Introduction

In this session, we query the database and tailor it to a particular SAM structure for Nigeria.

## Libraries

```{r}
#| warning: false
#| message: false
#| label: libraries

# Clean workspace
rm(list = ls())

# Load libraries
library(tidyverse)
library(readxl)
library(openxlsx)
```


## Datasets

```{r}
#| warning: false
#| message: false
#| label: datasets

# Emissions long data
total_emissions <- readRDS("emdb/data/outputs/gwp_total_emissions_long.rds")

# SAM Equivalence table
equivalence <- read_xlsx(
  "emdb/data/sam/nga/map-emdb.xlsx",
  sheet = "Equivalence")

# SAM elements
user_structure <- read_xlsx(
  "emdb/data/sam/nga/map-emdb.xlsx",
  sheet = "User Structure")

# Add Undetermined to SAM elements
undetermined_list <- as.data.frame(
  sort(unique(total_emissions$`ISIC Detail`))[
    startsWith(sort(unique(total_emissions$`ISIC Detail`)), "9999")])
colnames(undetermined_list) <- "User Structure (without total)"

user_structure <- rbind(user_structure, undetermined_list)
```

## Matching to SAM Structure

We ask for an equivalence structure `equivalence` in this case, between the `ISIC Detail` and the SAM. Through the use of R factors, we can make sure that the joined structure of the SAM is in the final product.

```{r}
user_selected_area = "Nigeria"
user_selected_year = 2018

final_product <- total_emissions |> 
  filter(
    Area == user_selected_area,
    Year == user_selected_year
  ) |> 
  left_join(
    equivalence,
    join_by(`ISIC Detail`)
  ) |> 
  mutate(
    `User Equivalent` = if_else(
      is.na(`User Equivalent`), 
      `ISIC Detail`,
      `User Equivalent`
    )
  ) |>
  mutate(
    `User Equivalent` = factor(
      `User Equivalent`,
      levels = user_structure[[1]]
    )
  ) |> 
  pivot_wider(
    id_cols = c(
      Area,
      ISO3,
      Year,
      `IPCC Code`,
      IPCC,
      # Category,
      Driver,
      `Emission Type`,
      Unit
    ),
    names_from = c(`User Equivalent`),
    values_from = Value,
    values_fn = sum,
    names_expand = T
  ) |> 
  arrange(Unit) |> 
  mutate(
    Total = rowSums(across(where(is.numeric) & -3), na.rm = TRUE)
  ) |> 
  relocate( starts_with("9999"), .after = Total)
  
# and save to file

# write.xlsx(
#   final_product,
#   file = "emdb/data/outputs/emissions_nigeria_2018.xlsx"
#   )
```
